(set-logic ALL)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (re.* (re.+ (re.* (re.union (re.union (re.union (re.union (str.to_re "000") (str.to_re "11")) (re.union (str.to_re "22") (str.to_re "33"))) (re.union (re.union (str.to_re "44") (str.to_re "555")) (re.union (str.to_re "666") (str.to_re "7")))) (re.union (re.* (re.union (str.to_re "88") (str.to_re "9"))) (re.* (re.+ (str.to_re "aa")))))))))) (re.* (re.union (re.+ (re.union (re.+ (re.union (re.+ (re.* (re.+ (str.to_re "bbb")))) (re.+ (re.union (re.union (str.to_re "c") (str.to_re "dd")) (re.union (str.to_re "eee") (str.to_re "f")))))) (re.+ (re.+ (re.+ (re.* (re.union (str.to_re "gg") (str.to_re "hhh")))))))) (re.+ (re.union (re.union (re.+ (re.* (re.+ (re.union (str.to_re "i") (str.to_re "j"))))) (re.+ (re.+ (re.+ (re.union (str.to_re "kk") (str.to_re "l")))))) (re.union (re.* (re.* (re.union (re.+ (str.to_re "m")) (re.+ (str.to_re "nnn"))))) (re.* (re.union (re.union (re.+ (str.to_re "ooo")) (re.+ (str.to_re "ppp"))) (re.union (re.+ (str.to_re "q")) (re.+ (str.to_re "r")))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)