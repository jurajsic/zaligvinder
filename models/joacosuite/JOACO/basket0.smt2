(set-logic QF_SLIA)

(declare-fun var2554 () String)
(declare-fun var2556 () String)
(declare-fun var2557 () String)
(declare-fun var2558 () String)
(declare-fun var2559 () String)
(declare-fun var2562 () String)
(declare-fun var2563 () Int)
(declare-fun var2564 () Int)
(declare-fun var2567 () Bool)
(declare-fun var2568 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= sv1 sv2 ) )
(assert (str.in_re var2568 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to_re "\u{27}") (re.++ (re.+  (str.to_re "\u{20}") ) (re.++  (re.union  (str.to_re "\u{4f}")  (str.to_re "\u{6f}")) (re.++  (re.union  (str.to_re "\u{52}")  (str.to_re "\u{72}")) (re.++ (re.+  (str.to_re "\u{20}") )  (str.to_re "\u{27}"))))))) (str.to_re sv1) ) (re.++  (re.++  (str.to_re "\u{27}") (re.++ (re.* re.allchar ) (re.++  (str.to_re "\u{3d}") (re.++ (re.* re.allchar )  (str.to_re "\u{27}"))))) (str.to_re sv2) ) )  (re.++  (str.to_re "\u{27}") (re.++ (re.*  (str.to_re "\u{20}") )  (re.union  (re.++  (str.to_re "\u{5c}\u{2d}")  (str.to_re "\u{5c}\u{2d}"))  (str.to_re "\u{23}")))) ) ) )
(assert (= var2554 var2556 ) )
(assert (= var2556 (str.++ var2557 var2558 ) ) )
(assert (= var2557 (str.++ var2559 "SELECT \u{2a} FROM Baskets WHERE basketid =" ) ) )
(assert (not (= var2558 "" )) )
(assert (or (= var2558 "" ) (= var2558 var2562 ) ) )
(assert (= var2564 (+ var2563 1 ) ) )
(assert (= var2567 false ) )
(assert (= var2567 (= var2568 "b_id" ) ) )

(check-sat)

