(set-logic QF_SLIA)
(declare-fun var116 () String)
(declare-fun var118 () String)
(declare-fun var119 () String)
(declare-fun var121 () String)
(declare-fun var122 () String)
(declare-fun var123 () String)
(declare-fun var124 () String)
(declare-fun var125 () String)
(declare-fun var126 () String)
(declare-fun var127 () String)
(declare-fun var128 () String)
(declare-fun var129 () String)
(declare-fun var131 () String)
(declare-fun var132 () String)
(declare-fun var133 () String)
(declare-fun var134 () String)
(declare-fun var135 () Int)
(declare-fun var137 () String)
(declare-fun var138 () Int)

(assert (str.in_re var122  (re.union  (re.++  (str.to_re "\u{5c}\u{3c}") (re.++ (re.*  (str.to_re "\u{20}") ) (re.++  (re.union  (str.to_re "\u{53}")  (str.to_re "\u{73}")) (re.++  (re.union  (str.to_re "\u{43}")  (str.to_re "\u{63}")) (re.++  (re.union  (str.to_re "\u{52}")  (str.to_re "\u{72}")) (re.++  (re.union  (str.to_re "\u{49}")  (str.to_re "\u{69}")) (re.++  (re.union  (str.to_re "\u{50}")  (str.to_re "\u{70}")) (re.++  (re.union  (str.to_re "\u{54}")  (str.to_re "\u{74}")) (re.++ (re.*  (str.to_re "\u{20}") ) (re.++  (str.to_re "\u{5c}\u{3e}") (re.++ (re.+  (re.union (re.range "\u{61}" "\u{7a}") (re.union (re.range "\u{41}" "\u{5a}") (re.union (re.range "\u{30}" "\u{39}") (re.union  (str.to_re "\u{5c}\u{28}") (re.union  (str.to_re "\u{5c}\u{29}")  (str.to_re "\u{3b}")))))) ) (re.++  (str.to_re "\u{5c}\u{3c}") (re.++  (str.to_re "\u{2f}") (re.++ (re.*  (str.to_re "\u{20}") ) (re.++  (re.union  (str.to_re "\u{53}")  (str.to_re "\u{73}")) (re.++  (re.union  (str.to_re "\u{43}")  (str.to_re "\u{63}")) (re.++  (re.union  (str.to_re "\u{52}")  (str.to_re "\u{72}")) (re.++  (re.union  (str.to_re "\u{49}")  (str.to_re "\u{69}")) (re.++  (re.union  (str.to_re "\u{50}")  (str.to_re "\u{70}")) (re.++  (re.union  (str.to_re "\u{54}")  (str.to_re "\u{74}")) (re.++  (str.to_re "\u{20}")  (str.to_re "\u{5c}\u{3e}"))))))))))))))))))))))  (re.++  (str.to_re "\u{5c}\u{3c}") (re.++ (re.*  (str.to_re "\u{20}") ) (re.++  (re.union  (str.to_re "\u{49}")  (str.to_re "\u{69}")) (re.++  (re.union  (str.to_re "\u{4d}")  (str.to_re "\u{6d}")) (re.++  (re.union  (str.to_re "\u{47}")  (str.to_re "\u{67}")) (re.++  (str.to_re "\u{20}") (re.++  (re.union  (str.to_re "\u{53}")  (str.to_re "\u{73}")) (re.++  (re.union  (str.to_re "\u{52}")  (str.to_re "\u{72}")) (re.++  (re.union  (str.to_re "\u{43}")  (str.to_re "\u{63}")) (re.++  (str.to_re "\u{3d}") (re.++  (re.union  (str.to_re "\u{4a}")  (str.to_re "\u{6a}")) (re.++  (re.union  (str.to_re "\u{41}")  (str.to_re "\u{61}")) (re.++  (re.union  (str.to_re "\u{56}")  (str.to_re "\u{76}")) (re.++  (re.union  (str.to_re "\u{41}")  (str.to_re "\u{61}")) (re.++  (re.union  (str.to_re "\u{53}")  (str.to_re "\u{73}")) (re.++  (re.union  (str.to_re "\u{43}")  (str.to_re "\u{63}")) (re.++  (re.union  (str.to_re "\u{52}")  (str.to_re "\u{72}")) (re.++  (re.union  (str.to_re "\u{49}")  (str.to_re "\u{69}")) (re.++  (re.union  (str.to_re "\u{50}")  (str.to_re "\u{70}")) (re.++  (re.union  (str.to_re "\u{54}")  (str.to_re "\u{74}")) (re.++  (str.to_re "\u{3a}") (re.++ (re.+  (re.union (re.range "\u{61}" "\u{7a}") (re.union (re.range "\u{41}" "\u{5a}") (re.union (re.range "\u{30}" "\u{39}") (re.union  (str.to_re "\u{5c}\u{28}") (re.union  (str.to_re "\u{5c}\u{29}")  (str.to_re "\u{3b}")))))) ) (re.++ (re.*  (str.to_re "\u{20}") )  (str.to_re "\u{5c}\u{3e}"))))))))))))))))))))))))) ) )
(assert (= var116 var118 ) )
(assert (= var118 (str.++ var119 "\u{3c}/FONT\u{3e}\u{3c}/TD\u{3e}\u{3c}/TR\u{3e}" ) ) )
(assert (= var119 (str.++ var121 var122 ) ) )
(assert (= var121 (str.++ var123 var124 ) ) )
(assert (= var123 (str.++ var125 var126 ) ) )
(assert (= var125 (str.++ var127 var128 ) ) )
(assert (= var127 (str.++ var129 "\u{3c}/TD\u{3e}\u{3c}TD STYLE=TEXT\u{2d}ALIGN:right;\u{3e}\u{3c}FONT SIZE=1\u{3e}" ) ) )
(assert (= var129 (str.++ var131 var132 ) ) )
(assert (or (= var128 var133 ) (= var128 var134 ) ) )
(assert (not (= var135 0 )) )
(assert (or (= var126 var133 ) (= var126 var137 ) ) )
(assert (not (= var138 0 )) )

(check-sat)
