(declare-const X String)
; ((http|https|ftp|telnet|gopher|ms\-help|file|notes)://)?(([a-z][\w~%!&',;=\-\.$\(\)\*\+]*)(:.*)?@)?(([a-z0-9][\w\-]*[a-z0-9]*\.)*(((([a-z0-9][\w\-]*[a-z0-9]*)(\.[a-z0-9]+)?)|(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)))(:[0-9]+)?))?(((/([\w`~!$=;\-\+\.\^\(\)\|\{\}\[\]]|(%\d\d))+)*/([\w`~!$=;\-\+\.\^\(\)\|\{\}\[\]]|(%\d\d))*)(\?[^#]+)?(#[a-z0-9]\w*)?)?
(assert (not (str.in_re X (re.++ (re.opt (re.++ (re.union (str.to_re "http") (str.to_re "https") (str.to_re "ftp") (str.to_re "telnet") (str.to_re "gopher") (str.to_re "ms-help") (str.to_re "file") (str.to_re "notes")) (str.to_re "://"))) (re.opt (re.++ (re.opt (re.++ (str.to_re ":") (re.* re.allchar))) (str.to_re "@") (re.range "a" "z") (re.* (re.union (str.to_re "~") (str.to_re "%") (str.to_re "!") (str.to_re "&") (str.to_re "'") (str.to_re ",") (str.to_re ";") (str.to_re "=") (str.to_re "-") (str.to_re ".") (str.to_re "$") (str.to_re "(") (str.to_re ")") (str.to_re "*") (str.to_re "+") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))))) (re.opt (re.++ (re.* (re.++ (re.union (re.range "a" "z") (re.range "0" "9")) (re.* (re.union (str.to_re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (re.* (re.union (re.range "a" "z") (re.range "0" "9"))) (str.to_re "."))) (re.union (re.++ (re.opt (re.++ (str.to_re ".") (re.+ (re.union (re.range "a" "z") (re.range "0" "9"))))) (re.union (re.range "a" "z") (re.range "0" "9")) (re.* (re.union (str.to_re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (re.* (re.union (re.range "a" "z") (re.range "0" "9")))) (re.++ ((_ re.loop 3 3) (re.++ (re.union (re.++ (str.to_re "25") (re.range "0" "5")) (re.++ (str.to_re "2") (re.range "0" "4") (re.range "0" "9")) (re.++ (re.opt (re.union (str.to_re "0") (str.to_re "1"))) (re.range "0" "9") (re.opt (re.range "0" "9")))) (str.to_re "."))) (re.union (re.++ (str.to_re "25") (re.range "0" "5")) (re.++ (str.to_re "2") (re.range "0" "4") (re.range "0" "9")) (re.++ (re.opt (re.union (str.to_re "0") (str.to_re "1"))) (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.opt (re.++ (str.to_re ":") (re.+ (re.range "0" "9")))))) (re.opt (re.++ (re.opt (re.++ (str.to_re "?") (re.+ (re.comp (str.to_re "#"))))) (re.opt (re.++ (str.to_re "#") (re.union (re.range "a" "z") (re.range "0" "9")) (re.* (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))))) (re.* (re.++ (str.to_re "/") (re.+ (re.union (re.++ (str.to_re "%") (re.range "0" "9") (re.range "0" "9")) (str.to_re "`") (str.to_re "~") (str.to_re "!") (str.to_re "$") (str.to_re "=") (str.to_re ";") (str.to_re "-") (str.to_re "+") (str.to_re ".") (str.to_re "^") (str.to_re "(") (str.to_re ")") (str.to_re "|") (str.to_re "{") (str.to_re "}") (str.to_re "[") (str.to_re "]") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))))) (str.to_re "/") (re.* (re.union (re.++ (str.to_re "%") (re.range "0" "9") (re.range "0" "9")) (str.to_re "`") (str.to_re "~") (str.to_re "!") (str.to_re "$") (str.to_re "=") (str.to_re ";") (str.to_re "-") (str.to_re "+") (str.to_re ".") (str.to_re "^") (str.to_re "(") (str.to_re ")") (str.to_re "|") (str.to_re "{") (str.to_re "}") (str.to_re "[") (str.to_re "]") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))))) (str.to_re "\u{a}")))))
; (((ht|f)tp(s?))\://)?(\bw{3}[^w]\b)?[^w{4}][^\@]([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(/\S*)?
(assert (str.in_re X (re.++ (re.opt (re.++ (str.to_re "://") (re.union (str.to_re "ht") (str.to_re "f")) (str.to_re "tp") (re.opt (str.to_re "s")))) (re.opt (re.++ ((_ re.loop 3 3) (str.to_re "w")) (re.comp (str.to_re "w")))) (re.union (str.to_re "w") (str.to_re "{") (str.to_re "4") (str.to_re "}")) (re.comp (str.to_re "@")) (re.+ (re.++ (re.+ (re.union (re.range "0" "9") (re.range "a" "z") (re.range "A" "Z") (str.to_re "-"))) (str.to_re "."))) ((_ re.loop 2 6) (re.union (re.range "a" "z") (re.range "A" "Z"))) (re.opt (re.++ (str.to_re ":") (re.+ (re.range "0" "9")))) (re.opt (re.++ (str.to_re "/") (re.* (re.comp (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}")))))) (str.to_re "\u{a}"))))
; tid\u{3D}\u{7B}\s+Basic.*\u{2F}toolbar\u{2F}
(assert (not (str.in_re X (re.++ (str.to_re "tid={") (re.+ (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}"))) (str.to_re "Basic") (re.* re.allchar) (str.to_re "/toolbar/\u{a}")))))
(check-sat)
