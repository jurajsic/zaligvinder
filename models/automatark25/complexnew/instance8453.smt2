(declare-const X String)
; ^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$
(assert (not (str.in_re X (re.++ (re.union (re.++ (re.union (str.to_re "19") (str.to_re "20")) (re.union (re.++ (re.union (str.to_re "0") (str.to_re "2") (str.to_re "4") (str.to_re "6") (str.to_re "8")) (re.union (str.to_re "0") (str.to_re "4") (str.to_re "8"))) (re.++ (re.union (str.to_re "1") (str.to_re "3") (str.to_re "5") (str.to_re "7") (str.to_re "9")) (re.union (str.to_re "2") (str.to_re "6")))) (str.to_re "-02-29")) (re.++ (re.union (re.++ (str.to_re "20") (re.range "0" "9") (re.range "0" "9")) (re.++ (str.to_re "19") (re.range "0" "9") (re.range "0" "9"))) (str.to_re "-") (re.union (re.++ (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "2"))) (str.to_re "-") (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "9")) (re.++ (str.to_re "2") (re.range "0" "8")))) (re.++ (re.union (re.++ (str.to_re "0") (re.union (str.to_re "1") (str.to_re "3") (str.to_re "5") (str.to_re "7") (str.to_re "8"))) (re.++ (str.to_re "1") (re.union (str.to_re "0") (str.to_re "2")))) (str.to_re "-31")) (re.++ (re.union (re.++ (str.to_re "0") (re.union (str.to_re "1") (str.to_re ",") (re.range "3" "9"))) (re.++ (str.to_re "1") (re.range "0" "2"))) (str.to_re "-") (re.union (str.to_re "29") (str.to_re "30")))))) (str.to_re "\u{a}")))))
; are\d+X-Mailer\u{3a}+\d+v=User-Agent\u{3a}
(assert (str.in_re X (re.++ (str.to_re "are") (re.+ (re.range "0" "9")) (str.to_re "X-Mailer") (re.+ (str.to_re ":")) (re.+ (re.range "0" "9")) (str.to_re "v=User-Agent:\u{a}"))))
; Host\u{3A}.*client\u{2E}baigoo\u{2E}com
(assert (str.in_re X (re.++ (str.to_re "Host:") (re.* re.allchar) (str.to_re "client.baigoo.com\u{a}"))))
; (\/\*(\s*|.*?)*\*\/)|(\/\/.*)
(assert (str.in_re X (re.union (re.++ (str.to_re "/*") (re.* (re.union (re.* (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}"))) (re.* re.allchar))) (str.to_re "*/")) (re.++ (str.to_re "\u{a}//") (re.* re.allchar)))))
; (?i)((sun(day)?|mon(day)?|tue(sday)?|wed(nesday)?|thu(rsday)?|fri(day)?|sat(urday)?),?\s)?((jan(uary)?|feb(ruary)?|mar(ch)?|apr(il)?|may|jun(e)?|jul(y)?|aug(ust)?|sep(tember)?|oct(ober)?|nov(ember)?|dec(ember)?)\s)+((0?[1-9]|[1-2][0-9]|3[0-1]),?\s)+([1-2][0-9][0-9][0-9])
(assert (not (str.in_re X (re.++ (re.opt (re.++ (re.union (re.++ (str.to_re "sun") (re.opt (str.to_re "day"))) (re.++ (str.to_re "mon") (re.opt (str.to_re "day"))) (re.++ (str.to_re "tue") (re.opt (str.to_re "sday"))) (re.++ (str.to_re "wed") (re.opt (str.to_re "nesday"))) (re.++ (str.to_re "thu") (re.opt (str.to_re "rsday"))) (re.++ (str.to_re "fri") (re.opt (str.to_re "day"))) (re.++ (str.to_re "sat") (re.opt (str.to_re "urday")))) (re.opt (str.to_re ",")) (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}")))) (re.+ (re.++ (re.union (re.++ (str.to_re "jan") (re.opt (str.to_re "uary"))) (re.++ (str.to_re "feb") (re.opt (str.to_re "ruary"))) (re.++ (str.to_re "mar") (re.opt (str.to_re "ch"))) (re.++ (str.to_re "apr") (re.opt (str.to_re "il"))) (str.to_re "may") (re.++ (str.to_re "jun") (re.opt (str.to_re "e"))) (re.++ (str.to_re "jul") (re.opt (str.to_re "y"))) (re.++ (str.to_re "aug") (re.opt (str.to_re "ust"))) (re.++ (str.to_re "sep") (re.opt (str.to_re "tember"))) (re.++ (str.to_re "oct") (re.opt (str.to_re "ober"))) (re.++ (str.to_re "nov") (re.opt (str.to_re "ember"))) (re.++ (str.to_re "dec") (re.opt (str.to_re "ember")))) (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}")))) (re.+ (re.++ (re.union (re.++ (re.opt (str.to_re "0")) (re.range "1" "9")) (re.++ (re.range "1" "2") (re.range "0" "9")) (re.++ (str.to_re "3") (re.range "0" "1"))) (re.opt (str.to_re ",")) (re.union (str.to_re " ") (str.to_re "\u{9}") (str.to_re "\u{a}") (str.to_re "\u{c}") (str.to_re "\u{d}")))) (str.to_re "\u{a}") (re.range "1" "2") (re.range "0" "9") (re.range "0" "9") (re.range "0" "9")))))
(check-sat)
