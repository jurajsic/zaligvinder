(set-logic QF_SLIA)
(declare-const X String)
; ^"[^"]+"$
(assert (str.in_re X (re.++ (str.to_re "\u{22}") (re.+ (re.comp (str.to_re "\u{22}"))) (str.to_re "\u{22}\u{a}"))))
; /^\/\/?[a-z0-9_]{7,8}\/\??[0-9a-f]{60,68}[\u{3b}\u{2c}\d+]*$/U
(assert (str.in_re X (re.++ (str.to_re "//") (re.opt (str.to_re "/")) ((_ re.loop 7 8) (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "_"))) (str.to_re "/") (re.opt (str.to_re "?")) ((_ re.loop 60 68) (re.union (re.range "0" "9") (re.range "a" "f"))) (re.* (re.union (str.to_re ";") (str.to_re ",") (re.range "0" "9") (str.to_re "+"))) (str.to_re "/U\u{a}"))))
; #^([a-z0-9+\-.]+):([/]{0,2}([a-z0-9\-._~%!\$&'\(\)\*+,;=:]+@)?([\[\]a-z0-9\-._~%!\$&'\(\)\*+,;=:]+(:[0-9]+)?))([a-z0-9\-._~%!\$&'\(\)\*+,;=:@/]*)(\?[\?/a-z0-9\-._~%!\$&'\(\)\*+,;=:@]+)?(\#[a-z0-9\-._~%!\$&'\(\)\*+,;=:@/\?]+)?#i
(assert (not (str.in_re X (re.++ (str.to_re "#") (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "+") (str.to_re "-") (str.to_re "."))) (str.to_re ":") (re.* (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "-") (str.to_re ".") (str.to_re "_") (str.to_re "~") (str.to_re "%") (str.to_re "!") (str.to_re "$") (str.to_re "&") (str.to_re "'") (str.to_re "(") (str.to_re ")") (str.to_re "*") (str.to_re "+") (str.to_re ",") (str.to_re ";") (str.to_re "=") (str.to_re ":") (str.to_re "@") (str.to_re "/"))) (re.opt (re.++ (str.to_re "?") (re.+ (re.union (str.to_re "?") (str.to_re "/") (re.range "a" "z") (re.range "0" "9") (str.to_re "-") (str.to_re ".") (str.to_re "_") (str.to_re "~") (str.to_re "%") (str.to_re "!") (str.to_re "$") (str.to_re "&") (str.to_re "'") (str.to_re "(") (str.to_re ")") (str.to_re "*") (str.to_re "+") (str.to_re ",") (str.to_re ";") (str.to_re "=") (str.to_re ":") (str.to_re "@"))))) (re.opt (re.++ (str.to_re "#") (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "-") (str.to_re ".") (str.to_re "_") (str.to_re "~") (str.to_re "%") (str.to_re "!") (str.to_re "$") (str.to_re "&") (str.to_re "'") (str.to_re "(") (str.to_re ")") (str.to_re "*") (str.to_re "+") (str.to_re ",") (str.to_re ";") (str.to_re "=") (str.to_re ":") (str.to_re "@") (str.to_re "/") (str.to_re "?"))))) (str.to_re "#i\u{a}") ((_ re.loop 0 2) (str.to_re "/")) (re.opt (re.++ (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "-") (str.to_re ".") (str.to_re "_") (str.to_re "~") (str.to_re "%") (str.to_re "!") (str.to_re "$") (str.to_re "&") (str.to_re "'") (str.to_re "(") (str.to_re ")") (str.to_re "*") (str.to_re "+") (str.to_re ",") (str.to_re ";") (str.to_re "=") (str.to_re ":"))) (str.to_re "@"))) (re.+ (re.union (str.to_re "[") (str.to_re "]") (re.range "a" "z") (re.range "0" "9") (str.to_re "-") (str.to_re ".") (str.to_re "_") (str.to_re "~") (str.to_re "%") (str.to_re "!") (str.to_re "$") (str.to_re "&") (str.to_re "'") (str.to_re "(") (str.to_re ")") (str.to_re "*") (str.to_re "+") (str.to_re ",") (str.to_re ";") (str.to_re "=") (str.to_re ":"))) (re.opt (re.++ (str.to_re ":") (re.+ (re.range "0" "9"))))))))
; Host\u{3A}\d+zmnjgmomgbdz\u{2f}zzmw\.gzt%3ftoolbar\u{2E}i-lookup\u{2E}com
(assert (not (str.in_re X (re.++ (str.to_re "Host:") (re.+ (re.range "0" "9")) (str.to_re "zmnjgmomgbdz/zzmw.gzt%3ftoolbar.i-lookup.com\u{a}")))))
; ^[a-z][a-z0-9\.,\-_]{5,31}$
(assert (str.in_re X (re.++ (re.range "a" "z") ((_ re.loop 5 31) (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re ".") (str.to_re ",") (str.to_re "-") (str.to_re "_"))) (str.to_re "\u{a}"))))
(check-sat)
