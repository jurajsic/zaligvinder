(set-logic ALL)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (re.+ (re.* (re.union (re.+ (re.* (re.union (re.union (re.union (re.union (re.union (re.+ (re.+ (str.to_re "000"))) (re.* (re.+ (str.to_re "11")))) (re.* (re.* (re.+ (str.to_re "2"))))) (re.+ (re.union (re.union (re.union (str.to_re "33") (str.to_re "4")) (re.* (str.to_re "555"))) (re.union (re.* (str.to_re "6")) (re.+ (str.to_re "7")))))) (re.union (re.+ (re.* (re.+ (re.union (str.to_re "8") (str.to_re "9"))))) (re.+ (re.+ (re.+ (re.union (str.to_re "a") (str.to_re "b"))))))) (re.union (re.* (re.+ (re.* (re.* (re.union (str.to_re "cc") (str.to_re "d")))))) (re.union (re.union (re.union (re.+ (re.union (str.to_re "e") (str.to_re "ff"))) (re.union (re.+ (str.to_re "g")) (re.* (str.to_re "hh")))) (re.+ (re.union (re.+ (str.to_re "iii")) (re.* (str.to_re "jjj"))))) (re.* (re.union (re.+ (re.+ (str.to_re "k"))) (re.union (re.* (str.to_re "ll")) (re.+ (str.to_re "m")))))))))) (re.* (re.* (re.union (re.+ (re.* (re.union (re.* (re.union (re.+ (str.to_re "n")) (re.union (str.to_re "o") (str.to_re "pp")))) (re.* (re.union (re.union (str.to_re "q") (str.to_re "r")) (re.* (str.to_re "s"))))))) (re.+ (re.union (re.+ (re.union (re.union (re.+ (str.to_re "tt")) (re.* (str.to_re "u"))) (re.union (re.union (str.to_re "vvv") (str.to_re "ww")) (re.+ (str.to_re "xx"))))) (re.union (re.* (re.* (re.union (str.to_re "y") (str.to_re "zzz")))) (re.+ (re.* (re.+ (str.to_re "AAA"))))))))))))))) (re.* (re.union (re.+ (re.+ (re.union (re.union (re.union (re.* (re.union (re.+ (re.* (re.union (re.* (re.* (str.to_re "B"))) (re.union (re.* (str.to_re "CC")) (re.* (str.to_re "DDD")))))) (re.union (re.+ (re.+ (re.* (re.union (str.to_re "EE") (str.to_re "FFF"))))) (re.+ (re.* (re.union (re.+ (str.to_re "GG")) (re.+ (str.to_re "HH")))))))) (re.* (re.union (re.+ (re.* (re.+ (re.+ (re.+ (str.to_re "II")))))) (re.union (re.* (re.+ (re.union (re.* (str.to_re "JJJ")) (re.union (str.to_re "KK") (str.to_re "LL"))))) (re.union (re.union (re.+ (re.union (str.to_re "MMM") (str.to_re "N"))) (re.* (re.* (str.to_re "OOO")))) (re.* (re.+ (re.+ (str.to_re "PPP"))))))))) (re.* (re.+ (re.* (re.union (re.* (re.* (re.union (re.+ (str.to_re "QQQ")) (re.* (str.to_re "RRR"))))) (re.* (re.+ (re.union (re.+ (str.to_re "S")) (re.union (str.to_re "TTT") (str.to_re "U")))))))))) (re.union (re.+ (re.union (re.* (re.+ (re.union (re.+ (re.union (re.+ (str.to_re "VV")) (re.+ (str.to_re "WWW")))) (re.+ (re.+ (re.+ (str.to_re "XX"))))))) (re.union (re.union (re.* (re.* (re.union (re.+ (str.to_re "Y")) (re.union (str.to_re "Z") (str.to_re "!!"))))) (re.+ (re.* (re.union (re.union (str.to_re """") (str.to_re "##")) (re.* (str.to_re "$$$")))))) (re.union (re.union (re.union (re.union (re.union (str.to_re "%") (str.to_re "&&")) (re.* (str.to_re "''"))) (re.+ (re.* (str.to_re "(")))) (re.* (re.* (re.union (str.to_re ")") (str.to_re "*"))))) (re.+ (re.+ (re.union (re.* (str.to_re "+")) (re.* (str.to_re ",,"))))))))) (re.union (re.+ (re.* (re.+ (re.union (re.union (re.+ (re.union (str.to_re "---") (str.to_re "."))) (re.union (re.* (str.to_re "/")) (re.union (str.to_re "::") (str.to_re ";;;")))) (re.+ (re.* (re.* (str.to_re "<")))))))) (re.+ (re.+ (re.+ (re.+ (re.+ (re.union (re.* (str.to_re "==")) (re.* (str.to_re ">"))))))))))))) (re.union (re.+ (re.union (re.* (re.* (re.* (re.+ (re.* (re.+ (re.* (re.union (re.* (str.to_re "?")) (re.+ (str.to_re "@")))))))))) (re.* (re.+ (re.* (re.* (re.+ (re.* (re.+ (re.+ (re.* (str.to_re "[[")))))))))))) (re.+ (re.+ (re.+ (re.union (re.union (re.* (re.union (re.* (re.union (re.union (re.* (str.to_re "\\\\\\")) (re.* (str.to_re "]]]"))) (re.+ (re.* (str.to_re "^^"))))) (re.union (re.* (re.union (re.* (str.to_re "__")) (re.+ (str.to_re "``")))) (re.+ (re.+ (re.* (str.to_re "{{{"))))))) (re.* (re.* (re.union (re.+ (re.* (re.* (str.to_re "|")))) (re.union (re.union (re.* (str.to_re "}}}")) (re.union (str.to_re "~~") (str.to_re "00"))) (re.union (re.* (str.to_re "1")) (re.union (str.to_re "222") (str.to_re "33")))))))) (re.* (re.* (re.+ (re.+ (re.union (re.* (re.* (str.to_re "444"))) (re.* (re.union (str.to_re "5") (str.to_re "6"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)