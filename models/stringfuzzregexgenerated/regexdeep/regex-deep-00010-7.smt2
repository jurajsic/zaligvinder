(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (re.union (re.+ (re.union (re.* (re.* (re.+ (re.* (re.* (str.to_re "0")))))) (re.+ (re.* (re.* (re.* (re.* (str.to_re "1")))))))) (re.* (re.+ (re.union (re.+ (re.* (re.* (re.* (str.to_re "2"))))) (re.* (re.* (re.union (re.+ (str.to_re "3")) (re.* (str.to_re "44"))))))))))) (re.* (re.* (re.* (re.union (re.+ (re.union (re.+ (re.+ (re.* (re.* (str.to_re "555"))))) (re.+ (re.union (re.union (re.union (str.to_re "66") (str.to_re "77")) (re.+ (str.to_re "888"))) (re.union (re.union (str.to_re "99") (str.to_re "aaa")) (re.* (str.to_re "b"))))))) (re.union (re.union (re.+ (re.* (re.+ (re.union (str.to_re "ccc") (str.to_re "d"))))) (re.* (re.* (re.+ (re.+ (str.to_re "e")))))) (re.+ (re.union (re.+ (re.union (re.+ (str.to_re "fff")) (re.+ (str.to_re "ggg")))) (re.union (re.union (re.* (str.to_re "hhh")) (re.* (str.to_re "i"))) (re.* (re.union (str.to_re "j") (str.to_re "kk"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)