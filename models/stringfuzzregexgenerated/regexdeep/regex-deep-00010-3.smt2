(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.union (re.+ (re.* (re.* (re.union (re.* (re.* (re.+ (str.to_re "00")))) (re.* (re.+ (re.union (str.to_re "111") (str.to_re "2")))))))) (re.* (re.union (re.+ (re.* (re.union (re.* (re.union (str.to_re "333") (str.to_re "44"))) (re.* (re.+ (str.to_re "5")))))) (re.+ (re.* (re.* (re.+ (re.+ (str.to_re "666"))))))))) (re.+ (re.union (re.union (re.+ (re.union (re.union (re.+ (re.+ (str.to_re "77"))) (re.+ (re.+ (str.to_re "8")))) (re.+ (re.+ (re.+ (str.to_re "999")))))) (re.* (re.* (re.+ (re.* (re.+ (str.to_re "a"))))))) (re.+ (re.union (re.+ (re.union (re.union (re.+ (str.to_re "bbb")) (re.union (str.to_re "cc") (str.to_re "d"))) (re.+ (re.+ (str.to_re "e"))))) (re.* (re.+ (re.union (re.* (str.to_re "ff")) (re.* (str.to_re "gg")))))))))) (re.* (re.+ (re.+ (re.+ (re.union (re.* (re.+ (re.union (re.* (str.to_re "hh")) (re.union (str.to_re "i") (str.to_re "jjj"))))) (re.* (re.* (re.+ (re.+ (str.to_re "kkk"))))))))))) (re.union (re.* (re.* (re.+ (re.* (re.union (re.* (re.union (re.union (re.* (str.to_re "lll")) (re.+ (str.to_re "mmm"))) (re.+ (re.* (str.to_re "n"))))) (re.* (re.* (re.* (re.* (str.to_re "oo")))))))))) (re.+ (re.+ (re.* (re.+ (re.* (re.+ (re.union (re.* (re.+ (str.to_re "pp"))) (re.union (re.union (str.to_re "qq") (str.to_re "rrr")) (re.* (str.to_re "s"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)