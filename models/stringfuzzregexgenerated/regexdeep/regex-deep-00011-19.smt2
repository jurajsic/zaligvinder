(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (re.union (re.+ (re.* (re.+ (re.+ (re.* (re.union (re.union (re.union (str.to_re "00") (str.to_re "111")) (re.+ (str.to_re "222"))) (re.union (re.+ (str.to_re "33")) (re.union (str.to_re "4") (str.to_re "55"))))))))) (re.union (re.+ (re.* (re.union (re.+ (re.union (re.+ (re.* (str.to_re "666"))) (re.* (re.* (str.to_re "77"))))) (re.union (re.union (re.union (re.* (str.to_re "8")) (re.* (str.to_re "99"))) (re.* (re.+ (str.to_re "aa")))) (re.union (re.union (re.union (str.to_re "b") (str.to_re "ccc")) (re.+ (str.to_re "d"))) (re.union (re.union (str.to_re "ee") (str.to_re "f")) (re.* (str.to_re "gg")))))))) (re.* (re.+ (re.+ (re.+ (re.* (re.union (re.+ (str.to_re "hhh")) (re.union (str.to_re "ii") (str.to_re "j")))))))))) (re.* (re.union (re.* (re.+ (re.* (re.+ (re.+ (re.* (re.* (str.to_re "kk")))))))) (re.+ (re.+ (re.union (re.* (re.union (re.union (re.+ (str.to_re "l")) (re.+ (str.to_re "mmm"))) (re.* (re.* (str.to_re "n"))))) (re.+ (re.* (re.union (re.+ (str.to_re "o")) (re.* (str.to_re "ppp")))))))))))) (re.+ (re.+ (re.+ (re.+ (re.* (re.* (re.+ (re.union (re.+ (re.union (re.* (str.to_re "q")) (re.+ (str.to_re "rr")))) (re.* (re.+ (re.union (str.to_re "sss") (str.to_re "ttt")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)