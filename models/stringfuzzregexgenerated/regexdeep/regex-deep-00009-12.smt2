(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (re.+ (re.+ (re.+ (re.union (re.union (re.+ (re.* (str.to_re "000"))) (re.* (re.* (str.to_re "1")))) (re.union (re.* (re.union (str.to_re "22") (str.to_re "333"))) (re.union (re.union (str.to_re "4") (str.to_re "555")) (re.+ (str.to_re "6")))))))) (re.* (re.* (re.+ (re.union (re.+ (re.+ (re.* (str.to_re "777")))) (re.union (re.union (re.* (str.to_re "8")) (re.+ (str.to_re "9"))) (re.* (re.union (str.to_re "aaa") (str.to_re "bb")))))))))) (re.* (re.* (re.union (re.union (re.* (re.+ (re.* (re.union (re.union (str.to_re "ccc") (str.to_re "dd")) (re.union (str.to_re "e") (str.to_re "f")))))) (re.* (re.union (re.union (re.+ (re.* (str.to_re "g"))) (re.+ (re.+ (str.to_re "h")))) (re.* (re.union (re.union (str.to_re "iii") (str.to_re "j")) (re.* (str.to_re "kkk"))))))) (re.union (re.union (re.* (re.+ (re.* (re.+ (str.to_re "l"))))) (re.+ (re.* (re.* (re.union (str.to_re "mmm") (str.to_re "nn")))))) (re.union (re.* (re.union (re.union (re.union (str.to_re "oo") (str.to_re "pp")) (re.union (str.to_re "qqq") (str.to_re "rrr"))) (re.+ (re.+ (str.to_re "s"))))) (re.* (re.* (re.* (re.+ (str.to_re "ttt")))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)