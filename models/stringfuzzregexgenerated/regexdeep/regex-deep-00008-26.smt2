(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (re.union (re.+ (re.+ (re.union (re.+ (re.+ (str.to_re "000"))) (re.union (re.+ (str.to_re "111")) (re.union (str.to_re "22") (str.to_re "33")))))) (re.+ (re.+ (re.* (re.* (re.+ (str.to_re "44")))))))) (re.* (re.* (re.* (re.union (re.union (re.* (re.union (str.to_re "555") (str.to_re "666"))) (re.union (re.union (str.to_re "7") (str.to_re "88")) (re.union (str.to_re "9") (str.to_re "a")))) (re.+ (re.union (re.* (str.to_re "b")) (re.+ (str.to_re "cc"))))))))) (re.+ (re.union (re.union (re.+ (re.* (re.+ (re.union (re.union (str.to_re "dd") (str.to_re "eee")) (re.union (str.to_re "fff") (str.to_re "gg")))))) (re.union (re.+ (re.union (re.union (re.* (str.to_re "hhh")) (re.+ (str.to_re "ii"))) (re.union (re.+ (str.to_re "jj")) (re.union (str.to_re "kkk") (str.to_re "l"))))) (re.+ (re.+ (re.* (re.+ (str.to_re "mm"))))))) (re.* (re.union (re.union (re.* (re.+ (re.union (str.to_re "nn") (str.to_re "o")))) (re.* (re.* (re.union (str.to_re "pp") (str.to_re "qqq"))))) (re.* (re.union (re.+ (re.+ (str.to_re "rrr"))) (re.+ (re.+ (str.to_re "sss"))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)