(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (re.+ (re.* (re.+ (re.* (re.+ (re.+ (re.union (re.+ (re.+ (re.union (str.to_re "00") (str.to_re "111")))) (re.+ (re.union (re.+ (str.to_re "222")) (re.+ (str.to_re "33"))))))))))))) (re.+ (re.union (re.* (re.+ (re.* (re.union (re.+ (re.* (re.union (re.* (re.+ (re.+ (str.to_re "4")))) (re.+ (re.+ (re.union (str.to_re "555") (str.to_re "666"))))))) (re.* (re.* (re.* (re.+ (re.+ (re.+ (str.to_re "7"))))))))))) (re.* (re.+ (re.union (re.+ (re.union (re.+ (re.union (re.+ (re.union (re.* (str.to_re "88")) (re.* (str.to_re "9")))) (re.+ (re.union (re.+ (str.to_re "a")) (re.* (str.to_re "b")))))) (re.union (re.+ (re.* (re.union (re.union (str.to_re "ccc") (str.to_re "ddd")) (re.* (str.to_re "eee"))))) (re.* (re.* (re.+ (re.union (str.to_re "f") (str.to_re "ggg")))))))) (re.union (re.+ (re.* (re.union (re.union (re.+ (re.+ (str.to_re "hhh"))) (re.* (re.+ (str.to_re "i")))) (re.union (re.union (re.union (str.to_re "j") (str.to_re "kk")) (re.+ (str.to_re "l"))) (re.union (re.* (str.to_re "mmm")) (re.* (str.to_re "nn"))))))) (re.+ (re.union (re.* (re.+ (re.* (re.+ (str.to_re "oo"))))) (re.+ (re.* (re.* (re.* (str.to_re "ppp"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)