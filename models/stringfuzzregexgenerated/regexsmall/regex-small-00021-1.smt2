(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "0"))) (re.++ (re.union (re.* (str.to_re "11")) (re.+ (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "3"))) (re.++ (re.* (re.+ (str.to_re "444"))) (re.++ (re.* (re.* (str.to_re "555"))) (re.++ (re.+ (re.+ (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "77")) (re.* (str.to_re "888"))) (re.++ (re.union (re.* (str.to_re "999")) (re.+ (str.to_re "aa"))) (re.++ (re.* (re.* (str.to_re "bbb"))) (re.++ (re.union (re.union (str.to_re "cc") (str.to_re "d")) (re.+ (str.to_re "eee"))) (re.++ (re.union (re.+ (str.to_re "fff")) (re.* (str.to_re "gg"))) (re.++ (re.* (re.+ (str.to_re "hh"))) (re.++ (re.* (re.* (str.to_re "i"))) (re.++ (re.+ (re.+ (str.to_re "jjj"))) (re.++ (re.* (re.* (str.to_re "k"))) (re.++ (re.union (re.+ (str.to_re "ll")) (re.* (str.to_re "mmm"))) (re.++ (re.union (re.union (str.to_re "n") (str.to_re "o")) (re.* (str.to_re "ppp"))) (re.++ (re.+ (re.+ (str.to_re "qqq"))) (re.++ (re.+ (re.+ (str.to_re "r"))) (re.++ (re.+ (re.* (str.to_re "ss"))) (re.union (re.+ (str.to_re "ttt")) (re.* (str.to_re "uu")))))))))))))))))))))))))
(check-sat)